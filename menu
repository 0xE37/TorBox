#!/bin/bash

# This file is a part of TorBox, an easy to use anonymizing router based on Raspberry Pi.
# Copyright (C) 2019 Patrick Truffer
# Contact: anonym@torbox.ch
# Website: https://www.torbox.ch
# Github:  https://github.com/radio24/TorBox
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it is useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
# DESCRIPTION
# This file displays the main menu and executes all relevant scripts.
#
# SYNTAX
# ./menu
#
#
###### SET VARIABLES ######
#
# SIZE OF THE MENU
#
# How many items do you have in the main menu?
NO_ITEMS=15
#
# How many lines are only for decoration and spaces?
NO_SPACER=5
#
#Set the the variables for the menu
MENU_WIDTH=80
MENU_WIDTH_REDUX=60
MENU_HEIGHT_25=25
MENU_HEIGHT_15=15
MENU_HEIGHT=$((8+NO_ITEMS+NO_SPACER))
MENU_LIST_HEIGHT=$((NO_ITEMS+$NO_SPACER))
#
#
# OTHER VARIABLES
#
RED='\033[1;31m'
WHITE='\033[1;37m'
NOCOLOR='\033[0m'
TORSTATS="sudo -u debian-tor nyx"
WICDCONFFILE="/etc/wicd/manager-settings.conf"
TORRC="/etc/tor/torrc"
RUNFILE="run/torbox.run"
EXITID="EXITID=0"
TOGGLE01=" "
TOGGLE02=" "


##############################
######## FUNCTIONS ###########
#include lib
.  lib/torbox.lib

# This opens the ports, after a restart if bridge relay is on
check_bridge_relay()
{
  MODE_BR=$(grep "BridgeRelay" ${TORRC})
  if [ "$MODE_BR" = "BridgeRelay 1" ]; then
    ORPORT=$(grep "^ORPort" ${TORRC})
    OBFS4PORT=$(grep "^ServerTransportListenAddr" ${TORRC})
    sORPORT=$(cut -d ' ' -f2 <<< $ORPORT)
    sOBFS4PORT=$(cut -d ':' -f2 <<< $OBFS4PORT)
    (sudo iptables -C INPUT -p tcp --dport $sORPORT -j ACCEPT) 2> /dev/null
    RULE_CHECK=$?
    if [ $RULE_CHECK = 1 ]; then
      sudo iptables -A INPUT -p tcp --dport $sORPORT -j ACCEPT
      sudo iptables -A INPUT -p tcp --dport $sOBFS4PORT -j ACCEPT
    fi
  fi
}


######## PREPARATIONS ########
# Resetting run-file (the initial EXITID in the runfile has to be 0)
clear
sudo sed -i "s/^EXITID=.*/${EXITID}/" ${RUNFILE}

# Reading from run-file
# TOGGLE01 represents the state of the WiFi mode
# TOGGLE02 represents the state of the CABLE mode
MODE=$(grep "^MODE=" ${RUNFILE})
if [ $MODE = "MODE=WLAN" ]; then
    TOGGLE01="ON"
    TOGGLE02="OFF"
else
    TOGGLE01="OFF"
    TOGGLE02="ON"
fi

check_bridge_relay
check_tor

###### DISPLAY THE MENU ######
CHOICE=$(whiptail --nocancel --title "TorBox v.0.2.5 - MAIN MENU" --menu "Choose an option (ESC -> command prompt)                      $TOR_STATUS" $MENU_HEIGHT $MENU_WIDTH $MENU_LIST_HEIGHT \
" " " " \
"  1" "Tor statistics (press m for menu / q to quit)" \
"  2" "Enforce a new exit node with a new IP" \
"  3" "Go to the countermeasure menu..." \
"  4" "Go to the configuration menu..." \
"  5" "Go to defend the open internet..." \
"===" "===================================[Wireless-client "$TOGGLE01"   ]===" \
"  6" "Cable-internet to wireless-clients" \
"  7" "Wireless-internet to wireless-clients" \
"  8" "Tethering-internet to wireless-clients" \
"===" "===================================[Cable-client    "$TOGGLE02"  ]===" \
"  9" "Cable-internet to cable-clients" \
" 10" "Wireless-internet to cable-clients" \
" 11" "Tethering-internet to cable-clients" \
"===" "===================================[Change mode & Update ]===" \
" 12" "Change wireless <-> cable client" \
" 13" "Go to the Update and Reset menu" \
"===" "===================================[Reboot & Shutdown    ]===" \
" 14" "Reboot TorBox" \
" 15" "Shutdown TorBox" 3>&1 1>&2 2>&3)

exitstatus=$?


if [ $exitstatus = 0 ]; then
	if [ "$CHOICE" != " " ]; then
		if [ $CHOICE = 1 ]; then
			clear
			$TORSTATS
		elif [ $CHOICE = 2 ]; then
			sudo bash new_ident
    elif [ $CHOICE = 3 ]; then
      bash menu-bridges
    elif [ $CHOICE = 4 ]; then
      bash menu-config
    elif [ $CHOICE = 5 ]; then
      bash menu-server

# Here begins the WIRELESS mode
    elif [ $CHOICE = 6 ]; then
      if [ $MODE = "MODE=WLAN" ]; then
	      INPUT=$(cat text/captive_or_not-text)
	      if (whiptail --title "TorBox - INFO" --no-button "OPEN ACCESS" --yes-button "CAPTIVE PORTAL" --yesno "$INPUT" $MENU_HEIGHT_25 $MENU_WIDTH); then
	         CAPTIVE=1
	      else
	         CAPTIVE=0
	      fi
	      sudo bash set_interfaces eth0 wlan0 $CAPTIVE
        finish
      fi
		elif [ $CHOICE = 7 ]; then
      if [ $MODE = "MODE=WLAN" ]; then
		    INPUT=$(cat text/captive_or_not-text)
	      if (whiptail --title "TorBox - INFO" --no-button "OPEN ACCESS" --yes-button "CAPTIVE PORTAL" --yesno "$INPUT" $MENU_HEIGHT_25 $MENU_WIDTH); then
	         CAPTIVE=1
	      else
	         CAPTIVE=0
	      fi
	      sudo bash set_interfaces wlan1 wlan0 $CAPTIVE
        finish
      fi
		elif [ $CHOICE = 8 ]; then
      if [ $MODE = "MODE=WLAN" ]; then
        whiptail --title "TorBox - INFO (scroll down!)" --textbox --scrolltext text/tethering-text $MENU_HEIGHT_25 $MENU_WIDTH
        sudo bash set_interfaces eth1 wlan0 0
        finish
      fi

# Here begis the CABLE mode. Important:
# The Internet have to be connected with an external ethernet interface (usually a USB-ethernet adapter)
# The client has always to be connected to the internal ethernet interface, fix assembled on the board!!
    elif [ $CHOICE = 9 ]; then
      if [ $MODE = "MODE=CABLE" ]; then
        whiptail --title "TorBox - INFO" --textbox text/cable-cable-text $MENU_HEIGHT_15 $MENU_WIDTH
        INPUT=$(cat text/captive_or_not-text)
	      if (whiptail --title "TorBox - INFO" --no-button "OPEN ACCESS" --yes-button "CAPTIVE PORTAL" --yesno "$INPUT" 20 $MENU_WIDTH); then
	         CAPTIVE=1
	      else
	         CAPTIVE=0
	      fi
	      sudo bash set_interfaces eth1 eth0 $CAPTIVE
        finish
	    fi
    elif [ $CHOICE = 10 ]; then
      if [ $MODE = "MODE=CABLE" ]; then
        whiptail --title "TorBox - INFO" --textbox text/wlan-cable-text $MENU_HEIGHT_15 $MENU_WIDTH
        INPUT=$(cat text/captive_or_not-text)
	      if (whiptail --title "TorBox - INFO" --no-button "OPEN ACCESS" --yes-button "CAPTIVE PORTAL" --yesno "$INPUT" 20 $MENU_WIDTH); then
	         CAPTIVE=1
	      else
	         CAPTIVE=0
	      fi
	      sudo bash set_interfaces wlan0 eth0 $CAPTIVE
        finish
	    fi
		elif [ $CHOICE = 11 ]; then
      if [ $MODE = "MODE=CABLE" ]; then
        whiptail --title "TorBox - INFO" --textbox text/wlan-cable-text $MENU_HEIGHT_15 $MENU_WIDTH
        whiptail --title "TorBox - INFO (scroll down!)" --textbox --scrolltext text/tethering-text $MENU_HEIGHT_25 $MENU_WIDTH
        sudo bash set_interfaces eth1 eth0 0
        finish
      fi
		elif [ $CHOICE = 12 ]; then
	    INPUT=$(cat text/change-mode-text)
      if [ $MODE = "MODE=WLAN" ]; then
        if (whiptail --title "TorBox - INFO" --defaultno --no-button "DON'T CHANGE" --yes-button "CHANGE TO CABLE" --yesno "$INPUT" $MENU_HEIGHT_25 $MENU_WIDTH); then
          clear
				  echo -e "${RED}[+] Configuring the interfaces...${NOCOLOR}"
				  if [ ! -f /etc/network/interfaces.ORIG ]; then
				    sudo cp /etc/network/interfaces /etc/network/interfaces.ORIG
				  fi
				  sudo cp etc/network/interfaces.cable /etc/network/interfaces
				  sudo sed -i "s/^MODE=.*/MODE=CABLE/" ${RUNFILE}
          echo -e "${RED}[+] Preparing connection settings...${NOCOLOR}"
          sleep 2
				  sudo bash set_interfaces eth1 eth0 0
				  echo -e "${RED}[+] Save connection settings...${NOCOLOR}"
				  sleep 2
          sudo sh -c "iptables-save > /etc/iptables.ipv4.nat"
          echo -e "${RED}[+] Deactivating AP capibilities...${NOCOLOR}"
          sleep 2
          sudo update-rc.d hostapd disable
          echo -e "${RED}[+] Configuring wicd...${NOCOLOR}"
          sleep 2
  				sudo sed -i "s/^wireless_interface.*/wireless_interface = wlan0/" ${WICDCONFFILE}
  				sudo sed -i "s/^wired_interface.*/wired_interface = eth1/" ${WICDCONFFILE}
          echo -e "${RED}[+] Rebooting TorBox...${NOCOLOR}"
          sleep 2
          sudo reboot
          exit 0
	      fi
      else
        if (whiptail --title "TorBox - INFO" --defaultno --no-button "DON'T CHANGE" --yes-button "CHANGE TO WIRELESS" --yesno "$INPUT" $MENU_HEIGHT_25 $MENU_WIDTH); then
          clear
				  echo -e "${RED}[+] Configuring the interfaces...${NOCOLOR}"
				  if [ ! -f /etc/network/interfaces.ORIG ]; then
				    sudo cp /etc/network/interfaces /etc/network/interfaces.ORIG
				  fi
				  sudo cp etc/network/interfaces.wlan /etc/network/interfaces
				  sudo sed -i "s/^MODE=.*/MODE=WLAN/" ${RUNFILE}
          echo -e "${RED}[+] Preparing connection settings...${NOCOLOR}"
          sleep 2
				  sudo bash set_interfaces eth0 wlan0 0
          echo -e "${RED}[+] Saving connection settings...${NOCOLOR}"
          sleep 2
          sudo sh -c "iptables-save > /etc/iptables.ipv4.nat"
          echo -e "${RED}[+] Re-activating AP capibilities...${NOCOLOR}"
          sleep 2
          sudo update-rc.d hostapd enable
          echo -e "${RED}[+] Configuring wicd...${NOCOLOR}"
          sleep 2
  			  sudo sed -i "s/^wireless_interface.*/wireless_interface = wlan1/" ${WICDCONFFILE}
  			  sudo sed -i "s/^wired_interface.*/wired_interface = eth0/" ${WICDCONFFILE}
          echo -e "${RED}[+] Rebooting TorBox...${NOCOLOR}"
          sleep 2
          sudo reboot
          exit 0
        fi
      fi

#This starts the update / reset submenu
    elif [ $CHOICE = 13 ]; then
      screen bash update

		elif [ $CHOICE = 14 ]; then
      sudo sh -c "iptables-save > /etc/iptables.ipv4.nat"
      echo -e "${RED}[+] Rebooting TorBox...${NOCOLOR}"
      echo -e "${WHITE}[!] If you have activated Bridges or Bridge Relay, these services will be reactivated automatically after the restart.${NOCOLOR}"
      echo ""
      sleep 2
      sudo reboot
      exit 0
		elif [ $CHOICE = 15 ]; then
      sudo sh -c "iptables-save > /etc/iptables.ipv4.nat"
      echo -e "${RED}[+] Shutting down TorBox...${NOCOLOR}"
      sleep 2
      echo -e "${WHITE}[!] If you have activated Bridges or Bridge Relay, these services will be reactivated automatically after the restart.${NOCOLOR}"
      echo -e "${WHITE}[!] You can disconnect TorBox from the power source in about 30 second...${NOCOLOR}"
      echo ""
      sleep 2
      sudo shutdown -h now
      exit 0
		fi
	fi
else
	clear
	PROMPTTEXT=$(cat text/prompt-text)
	echo -e "$PROMPTTEXT"
	echo " "
	exit 0
fi
bash menu
