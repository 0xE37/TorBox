#!/bin/bash

# This file is part of TorBox, an easy to use anonymizing router based on Raspberry Pi.
# Copyright (C) 2020 Patrick Truffer
# Contact: anonym@torbox.ch
# Website: https://www.torbox.ch
# Github:  https://github.com/radio24/TorBox
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it is useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
# DESCRIPTION
# This file displays the bridges menu and executes all relevant scripts.
#
# SYNTAX
# ./menu-bridges
#
#
###### SET VARIABLES ######
#
# SIZE OF THE MENU
#
# How many items do you have in the main menu?
NO_ITEMS=10
#
# How many lines are only for decoration and spaces?
NO_SPACER=4
#
#Set the the variables for the menu
MENU_WIDTH=80
MENU_WIDTH_REDUX=60
MENU_HEIGHT_15=15
MENU_HEIGHT_25=25
MENU_HEIGHT=$((8+NO_ITEMS+NO_SPACER))
MENU_LIST_HEIGHT=$((NO_ITEMS+$NO_SPACER))

#Colors
RED='\033[1;31m'
WHITE='\033[1;37m'
NOCOLOR='\033[0m'

#Other variables
TORRC="/etc/tor/torrc"
BAK="/etc/tor/torrc.bak"
TMP="/tmp/torrc.tmp"
i=0
j=0


##############################
######## PREPARATIONS ########
# TOGGLE05 / TOGGLE06 represents the status of the bridging mode
read_config()
{
MODE_BRIDGES=$(grep "UseBridges" ${TORRC})
if [ "$MODE_BRIDGES" = "UseBridges 1" ]; then
    TOGGLE05="ON]==="
    TOGGLE05b="ON"
    TOGGLE06="OFF]=="
    TOGGLE06b="OFF"
else
    TOGGLE05="OFF]=="
    TOGGLE05b="OFF"
    TOGGLE06="ON]==="
    TOGGLE06b="ON"
fi

# NECESSARY FOR THE DEACTIVATION OF THE BRIDGE RELAY
sORPORT=$(cut -d ' ' -f2 <<< $ORPORT)
sOBFS4PORT=$(cut -d ':' -f2 <<< $OBFS4PORT)

# HOW MANY CONFIGURED BRIDGES DO WE HAVE?
# readarray reads into an array beginning with index 0
readarray -t configured_bridges_deactivated < <(grep "^#Bridge " ${TORRC})
readarray -t configured_bridges_activated < <(grep "^Bridge " ${TORRC})
if [ ${#configured_bridges_deactivated[0]} = 0 ]; then
  number_configured_bridges_deactivated=0
else
  number_configured_bridges_deactivated=${#configured_bridges_deactivated[*]}
fi
if [ ${#configured_bridges_activated[0]} = 0 ]; then
  number_configured_bridges_activated=0
else
  number_configured_bridges_activated=${#configured_bridges_activated[*]}
fi
number_configured_bridges_total=$(( $number_configured_bridges_deactivated + $number_configured_bridges_activated ))
}

read_config

###### DISPLAY THE MENU ######
clear

CHOICE=$(whiptail --cancel-button "Back" --title "TorBox v.0.3.0 - COUNTERMEASURE MENU" --menu "Choose an option (ESC -> back to the main menu)" $MENU_HEIGHT $MENU_WIDTH $MENU_LIST_HEIGHT \
" " " " \
"===" "===================[Bypass Tor blocking with bridges -> "$TOGGLE05 \
"  1" "ALL ABOUT BRIDGES - READ ME FIRST"  \
"  2" "Toggle Bridge Mode from "$TOGGLE05b" to "$TOGGLE06b  \
"  3" "List all "$number_configured_bridges_total" bridge(s)"  \
"  4" "Activate all configured bridge(s)"  \
"  5" "Add additional bridge(s) - keep the old ones"  \
"  6" "Remove selected bridge(s)"  \
"  7" "Remove all configured bridges"  \
"  8" "Enter the advanced configuration editor"  \
"  9" "Restart Tor - check if it is working (press CTRL-C to leave)"  \
"===" "=====================================[More Countermeasures]===" \
" 10" "Countermeasure against a disconnection when idle feature" 3>&1 1>&2 2>&3)

exitstatus=$?

if [ $exitstatus = 0 ]; then
  if [ "$CHOICE" != " " ]; then
		if [ $CHOICE = 1 ]; then
      INPUT=$(cat text/help-bridges-text)
      if (whiptail --title "TorBox - INFO (scroll down!)" --msgbox --scrolltext "$INPUT" $MENU_HEIGHT_25 $MENU_WIDTH); then
        clear
      fi
		elif [ $CHOICE = 2 ]; then
      if [ "$MODE_BRIDGES" != "UseBridges 1" ]; then
        INPUT=$(cat text/activate-bridges-text)
        if (whiptail --title "TorBox - INFO (scroll down!)" --scrolltext --defaultno --no-button "DON'T CHANGE" --yes-button "ACTIVATE BRIDGE MODE" --yesno "$INPUT" $MENU_HEIGHT_25 $MENU_WIDTH); then
          sudo bash deactivating_bridge_relay
          sudo sed -i "s/^#UseBridges/UseBridges/g" ${TORRC}
          sudo sed -i "s/^#UpdateBridgesFromAuthority/UpdateBridgesFromAuthority/g" ${TORRC}
          #Currently, we support only OBFS4 bridges
          sudo sed -i "s/^#ClientTransport/ClientTransport/g" ${TORRC}
          sudo sh bridges_activate_old $number_configured_bridges_deactivated 0
          if [ $number_configured_bridges_total = 0]; then
            INPUT=$(cat text/add-bridges-first-text)
            if (whiptail --title "TorBox - INFO" --yesno "$INPUT" 35 $MENU_WIDTH); then
              sudo bash bridges_add
            fi
          fi
        fi
      else
        INPUT=$(cat text/deactivate-bridges-text)
        if (whiptail --title "TorBox - INFO" --defaultno --no-button "DON'T CHANGE" --yes-button "DEACTIVATE BRIDGE MODE" --yesno "$INPUT" $MENU_HEIGHT_15 $MENU_WIDTH); then
          sudo sed -i "s/^UseBridges/#UseBridges/g" ${TORRC}
          sudo sed -i "s/^UpdateBridgesFromAuthority/#UpdateBridgesFromAuthority/g" ${TORRC}
          #Currently, we support only OBFS4 bridges
          sudo sed -i "s/^ClientTransport/#ClientTransport/g" ${TORRC}
          sudo sed -i "s/^Bridge /#Bridge /g" ${TORRC}
          sudo service tor restart
        fi
      fi
      read_config
		elif [ $CHOICE = 3 ]; then
      if [ $number_configured_bridges_deactivated -gt 0 ]; then
          clear
          echo -e "${RED}[+] DEACTIVATED BRIDGES${NOCOLOR}"
          echo -e "${RED}[+] Format: <Number>: <IP>:<Port> <Fingerprint>${NOCOLOR}"
          echo -e "${RED}[+] Would you like to check the validity of the bridge?${NOCOLOR}"
          echo -e "${RED}[+] Go to https://metrics.torproject.org/rs.html and search for the fingerprint${NOCOLOR}"
          echo -e "${RED}[+] Or go to https://bridges.torproject.org/scan/ for a TCP reachability test${NOCOLOR}"
          echo " "
          while [ $i -lt $number_configured_bridges_deactivated ]
          do
              bridge_address=$(cut -d ' ' -f3,4 <<< ${configured_bridges_deactivated[$i]})
              i=$(( $i + 1 ))
              bridge_address=$i": "$bridge_address
              echo $bridge_address
          done
          echo " "
          echo " "
      fi
      if [ $number_configured_bridges_activated -gt 0 ]; then
          echo -e "${RED}[+] ACTIVATED BRIDGES${NOCOLOR}"
          echo -e "${RED}[+] Format: <Number>: <IP>:<Port> <Fingerprint>${NOCOLOR}"
          echo -e "${RED}[+] Would you like to check the validity of the bridge?${NOCOLOR}"
          echo -e "${RED}[+] Go to https://metrics.torproject.org/rs.html and search for the fingerprint${NOCOLOR}"
          echo -e "${RED}[+] Or go to https://bridges.torproject.org/scan/ for a TCP reachability test${NOCOLOR}"
          echo " "
          while [ $j -lt $number_configured_bridges_activated ]
          do
              bridge_address=$(cut -d ' ' -f3,4 <<< ${configured_bridges_activated[$j]})
              j=$(( $j + 1 ))
              n=$(( $i + $j ))
              bridge_address=$n": "$bridge_address
              echo -e "${WHITE}$bridge_address${NOCOLOR}"
          done
      fi
      echo " "
      read -n 1 -s -r -p "Press any key to continue"
		elif [ $CHOICE = 4 ]; then
      sudo sh bridges_activate_old $number_configured_bridges_deactivated 1
      read_config
		elif [ $CHOICE = 5 ]; then
      INPUT=$(cat text/add-bridges-text)
      if (whiptail --title "TorBox - INFO" --yesno "$INPUT" $MENU_HEIGHT_25 $MENU_WIDTH); then
        sudo bash bridges_add $MODE_BRIDGES
        read_config
      fi
    elif [ $CHOICE = 6 ]; then
      INPUT=$(cat text/delete-selected-bridges-text)
      if (whiptail --title "TorBox - INFO" --yesno "$INPUT" $MENU_HEIGHT_25 $MENU_WIDTH); then
        number_to_be_deleted=$(whiptail --title "TorBox - INFO" --inputbox "\n\nWhich bridge number do you like to delete? Put in all bridge numbers separated by a comma (for example 1,2,3,10)" $MENU_HEIGHT_25 $MENU_WIDTH_REDUX 3>&1 1>&2 2>&3)
        number_to_be_deleted=$(cut -f1- -d ',' --output-delimiter=' ' <<< $number_to_be_deleted)
        delete_number=$(cut -d ' ' -f1 <<< $number_to_be_deleted)
        sudo cp ${TORRC} ${BAK}
        while [[ "$delete_number" != " " && $delete_number -gt 0 && $delete_number -le $number_configured_bridges_total ]]
        do
          if [ $delete_number -gt $number_configured_bridges_deactivated ]; then
            i=$(( $delete_number - $number_configured_bridges_deactivated - 1 ))
            sudo grep -v "^${configured_bridges_activated[$i]}" ${TORRC} > ${TMP}; sudo mv ${TMP} ${TORRC}
          else
            i=$(( $delete_number - 1 ))
            sudo grep -v "^${configured_bridges_deactivated[$i]}" ${TORRC} > ${TMP}; sudo mv ${TMP} ${TORRC}
          fi
          if [ $delete_number = $number_to_be_deleted ]; then
            delete_number=0
          else
            number_to_be_deleted=$(cut -d ' ' -f2- <<< $number_to_be_deleted)
            delete_number=$(cut -d ' ' -f1 <<< $number_to_be_deleted)
          fi
        done
        read_config
      fi
    elif [ $CHOICE = 7 ]; then
      INPUT=$(cat text/delete-all-bridges-text)
      if (whiptail --title "TorBox - INFO" --defaultno --no-button "DON'T CHANGE" --yes-button "DELETE ALL BRIDGES" --yesno "$INPUT" $MENU_HEIGHT_15 $MENU_WIDTH); then
          sudo cp ${TORRC} ${BAK}
          sudo sed -i "/^#Bridge /d" ${TORRC}
          sudo sed -i "/^Bridge /d" ${TORRC}
          read_config
      fi
    elif [ $CHOICE = 8 ]; then
      INPUT=$(cat text/advanced-bridges-text)
      if (whiptail --title "TorBox - INFO" --defaultno --no-button "DON'T CHANGE" --yes-button "CHANGE NOW" --yesno "$INPUT" $MENU_HEIGHT_25 $MENU_WIDTH); then
        sudo cp ${TORRC} ${BAK}
        sudo nano ${TORRC}
        read_config
      fi
    elif [ $CHOICE = 9 ]; then
      sudo bash restart_tor menu-bridges
    elif [ $CHOICE = 10 ]; then
      whiptail --title "TorBox - INFO" --textbox text/ping-text $MENU_HEIGHT_25 $MENU_WIDTH
			ping -q google.com >/dev/null &
			echo -e "${RED}[+] Countermeasure against a disconnect when idle feature activated!${NOCOLOR}"
			sleep 5
    fi
 	fi
else
  clear
  exit 0
fi
bash menu-bridges
