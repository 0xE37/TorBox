#!/bin/bash

# This file is part of TorBox, an easy to use anonymizing router based on Raspberry Pi.
# Copyright (C) 2019 Patrick Truffer
# Contact: anonym@torbox.ch
# Website: https://www.torbox.ch
# Github:  https://github.com/radio24/TorBox
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it is useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
# DESCRIPTION
# This file displays the configuration menu and executes all relevant scripts.
#
# SYNTAX
# ./menu-config
#
#
###### SET VARIABLES ######
#
# SIZE OF THE MENU
#
# How many items do you have in the main menu?
NO_ITEMS=9
#
# How many lines are only for decoration and spaces?
NO_SPACER=5
#
#Set the the variables for the menu
MENU_ROWS=80
MENU_HEIGHT=$((8+NO_ITEMS+NO_SPACER))
MENU_LIST_HEIGHT=$((NO_ITEMS+$NO_SPACER))
#
#
# OTHER VARIABLES
#
CRDAFILE="/etc/default/crda"
HOSTAPD="/etc/hostapd/hostapd.conf"
NEWIDENT="new_ident"
TORRC="/etc/tor/torrc"
KERNEL_VERS=" "
LOG_STATUS=" "
REGDOMAIN=" "
TLC=" "
TOR_VERS=" "
WICD_VERS=" "

##############################

######## PREPARATIONS ########
# TOGGLE03 / TOGGLE04 represents the extent of logging
LOG_STATUS=$(sudo systemctl is-active rsyslog)
if [ $LOG_STATUS = inactive ]; then
    TOGGLE03="LOW]====="
    TOGGLE03b="LOW"
    TOGGLE04="HIGH]===="
    TOGGLE04b="HIGH"
else
    TOGGLE03="HIGH]===="
    TOGGLE03b="HIGH"
    TOGGLE04="LOW]====="
    TOGGLE04b="LOW"
fi

###### DISPLAY THE MENU ######
clear

CHOICE=$(whiptail --cancel-button "Back" --title "TorBox v.0.2.4 - CONFIGURATION & UPDATE MENU" --menu "Choose an Option (ESC -> back to the main menu)" $MENU_HEIGHT $MENU_ROWS $MENU_LIST_HEIGHT \
" " " " \
"===" "===========================================[Configuration]===" \
"  1" "Change admin (user pi) passwort"  \
"  2" "Change the name of your wireless lan (reboot required)"  \
"  3" "Change the password of your wireless lan (reboot required)"  \
"  4" "Hide / Unhide your wireless lan (reboot required)"  \
"  5" "Set the wifi regulatory domain" \
"  6" "Change the password of your Tor control port"  \
"===" "===========================================[Logging "$TOGGLE03 \
"  7" "Changing the extent of logging ("$TOGGLE03b" -> "$TOGGLE04b")" \
"  8" "Erase all log files" \
"===" "===========================================[Update]==========" \
"  9" "Update the base system to the newest version (reboot required)"  3>&1 1>&2 2>&3)

exitstatus=$?

if [ $exitstatus = 0 ]; then
  if [ "$CHOICE" != " " ]; then
		if [ $CHOICE = 1 ]; then
			whiptail --msgbox "You will now be asked to enter a new admin password." 20 60 1
  		sudo passwd pi
		elif [ $CHOICE = 2 ]; then
			INPUT=$(whiptail --title "Changing the configuration of the wireless lan" --inputbox "\n\nEnter you new name for your wireless lan:" 20 60 3>&1 1>&2 2>&3)
			if [ $INPUT != " " ]; then
			  sudo bash change_ssid $INPUT
				if (whiptail --yesno "The name of your wireless lan is now changed to\n\n$INPUT.\n\nWould you like to reboot TorBox now to put the changes into effect?" 20 60); then
					sudo bash save_connection
					echo "[+] Rebooting TorBox..."
        	sleep 2
					sudo reboot
					exit 0
				fi
			fi
		elif [ $CHOICE = 3 ]; then
			INPUT=$(whiptail --title "Changing the configuration of the wireless lan" --inputbox "\n\nEnter you new password:" 20 60 3>&1 1>&2 2>&3)
			if [ $INPUT != " " ]; then
				sudo bash change_ssid_pw $INPUT
				if (whiptail --yesno "The password of your wireless lan is now changed to\n\n$INPUT.\n\nWould you like to reboot TorBox now to put the changes into effect?" 20 60); then
          sudo bash save_connection
					echo "[+] Rebooting TorBox..."
        	sleep 2
					sudo reboot
					exit 0
				fi
			fi
		elif [ $CHOICE = 4 ]; then
			if (whiptail --title "Changing the configuration of the wireless lan" --yes-button "Unhide" --no-button "Hide" --yesno "\n\nWould you like to hide / unhide your wireless lan?" 20 60 3>&1 1>&2 2>&3); then
			  INPUT=ignore_broadcast_ssid=0
			else
				INPUT=ignore_broadcast_ssid=1
			fi
			if grep "^ignore_broadcast_ssid=" ${HOSTAPD}; then
      	sudo sed -i "s/^ignore_broadcast_ssid=.*/${INPUT}/" ${HOSTAPD}
			else
      	sudo echo ${INPUT} >> ${HOSTAPD}
			fi
			if (whiptail --yesno "\n\nWould you like to reboot TorBox now to put the changes into effect?" 20 60); then
        sudo bash save_connection
				echo "[+] Rebooting TorBox..."
        sleep 2
				sudo reboot
				exit 0
			fi
    elif [ $CHOICE = 5 ]; then
      whiptail --title "TorBox - INFO" --textbox text/wrd-text 30 80
      REGDOMAIN=$(grep "^REGDOMAIN=" ${CRDAFILE})
      TLC=$(echo "$REGDOMAIN"|cut -c11-12)
      INPUT=$(whiptail --title "Setting the wifi regulatory domain" --inputbox "\n\nEnter the prefered two letter country code (for a list see: https://wikipedia.org/wiki/ISO_3166-1_alpha-2).\n\nLeave the input field blank to unset the wifi regulatory dopmain (that's the default) or just press enter to abstain from making any changes:" 20 60 $TLC 3>&1 1>&2 2>&3)
      if [ "$INPUT" != "$TLC" ]; then
        if [ -z "$INPUT" ]; then
          sudo iw reg set 00
          INPUT="REGDOMAIN="
          sudo sed -i "s/^REGDOMAIN=.*/${INPUT}/" ${CRDAFILE}
        else
          sudo iw reg set $INPUT
          INPUT="REGDOMAIN=$INPUT"
          sudo sed -i "s/^REGDOMAIN=.*/${INPUT}/" ${CRDAFILE}
        fi
      fi
    elif [ $CHOICE = 6 ]; then
			INPUT=$(whiptail --title "Changing Tor's configuration" --inputbox "\n\nEnter you new password:" 20 60 3>&1 1>&2 2>&3)
			if [ $INPUT != " " ]; then
				INPUTHASH=HashedControlPassword\ $(tor --hash-password $INPUT)
				INPUT=PASSWORD=$INPUT
				if grep "^HashedControlPassword\ " ${TORRC}; then
      	  sudo sed -i "s/^HashedControlPassword\ .*/${INPUTHASH}/" ${TORRC}
				else
        	sudo echo ${INPUTHASH} >> ${TORRC}
				fi
				sudo sed -i "s/^PASSWORD=.*/${INPUT}/" ${NEWIDENT}
				sudo service tor restart
			fi
    elif [ $CHOICE = 7 ]; then
			if (whiptail --title "Changing the extent of logging ("$TOGGLE03b" -> "$TOGGLE04b")" --defaultno --yes-button "High" --no-button "LOW" --yesno "\n\nWould you like to change the extend of logging?" 20 60 3>&1 1>&2 2>&3); then
				LOG_STATUS=$(sudo systemctl is-active rsyslog)
				if [ $LOG_STATUS = inactive ]; then
					sudo systemctl enable rsyslog
					sudo service rsyslog start
          if (whiptail --yesno "\n\nWould you like to reboot TorBox now to make sure all logging will be started?" 20 60); then
            sudo bash save_connection
    				echo "[+] Rebooting TorBox..."
            sleep 2
    				sudo reboot
    				exit 0
    			fi
				fi
			else
		  	clear
				sudo bash erase_logs
				sleep 2
				echo "[+] Stopping logging now..."
				sudo service rsyslog stop
				echo "[+] Making it permanent..."
	      #Siehe auch hier: https://stackoverflow.com/questions/17358499/linux-how-to-disable-all-log
				sudo systemctl disable rsyslog
			fi
    elif [ $CHOICE = 8 ]; then
			clear
			echo "[!] Erasing all log files..."
			echo " "
			sudo bash erase_logs
			sleep 2
    elif [ $CHOICE = 9 ]; then
      whiptail --title "TorBox - INFO" --textbox text/update-text 30 80
      clear
 			KERNEL_VERS=$(uname -s -r)
      TOR_VERS=$(tor --version)
    	WICD_VERS=$(wicd-curses --version)
			INPUT="\n\nThis is the version of your current base system:\nKernel: $KERNEL_VERS\nTor:    $TOR_VERS\nWicd:   $WICD_VERS\n\nWould you like to update the base system to the newest version (the system will reboot at the end)?"
      if (whiptail --defaultno --yesno "$INPUT" 20 60); then
         screen bash update
			fi
		fi
	fi
else
  clear
  exit 0
fi
bash menu-config
