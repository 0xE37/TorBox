#!/bin/bash

# This file is part of TorBox, an easy to use anonymizing router based on Raspberry Pi.
# Copyright (C) 2020 Patrick Truffer
# Contact: anonym@torbox.ch
# Website: https://www.torbox.ch
# Github:  https://github.com/radio24/TorBox
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it is useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
# DESCRIPTION
# This file helps to overcome a login portal of an Internet provider, usually seen with
# providers of free wireless access (so called captive portal). To be able to handle
# such a portal, it is necessary to establish a direct connection to the wireless
# network provider. This procedure temporarily uses an INSECURE CONNECTION. The user
# may CLOSE ALL HIS APPLICATIONS ON HIS CLIENT DEVICES to prevent the leakage of information
# during the established INSECURE CONNECTION.
#
# SYNTAX
# ./set_captive <outgoing interface> <incoming interface>
#
#
# The <outgoing interface> is the door to the internet. Possible values for the <outgoing interface>:
#
# eth0  -> 	TorBox is connected to the internet with a cable (WIRELESS MODUS).
# eth1  -> 	TorBox is connected to the internet with a cable (CABLE MODUS) or with a tethering device.
# wlan0 ->  TorBox is connected to the Internet through a wireless network (CABLE MODUS).
# wlan1 -> 	TorBox is connected to the Internet through a wireless network (WIRELESS MODUS).
#
# The <incoming interface> is where the client-device is connected to the TorBox. Possible values for the <incoming interface>:
#
# eth0  -> 	The device is connected with a cable.        -> CABLE MODUS
# wlan0 -> 	The device is connected via wireless network -> WIRELESS MODUS
#
#
#
######## SET VARIABLES ########

#Set the the variables for the menu
MENU_WIDTH=80
MENU_WIDTH_REDUX=60
MENU_HEIGHT_15=15
MENU_HEIGHT_25=25

#Colors
RED='\033[1;31m'
WHITE='\033[1;37m'
NOCOLOR='\033[0m'

#Other variables
IPTABLES="/sbin/iptables"
MODPROBE="/sbin/modprobe"
DNSPROG="dnsmasq"
RUNFILE="run/torbox.run"
EXITID="EXITID=1"
O_DEVICE=$1
I_DEVICE=$2

###############################

###### DISPLAY A WARNING ######
sleep 2
clear
INPUT=$(cat text/is-it-captive-text)
if (whiptail --title "TorBox - WARNING" --defaultno --yesno "$INPUT" $MENU_HEIGHT_25 $MENU_WIDTH); then
  CAPTIVE=1
else
  sudo sed -i "s/^EXITID=.*/${EXITID}/" ${RUNFILE}
  exit 0
fi

######## PREPARATIONS ########
clear
echo -e "${RED}[+] Starting DNS forwarder...${NOCOLOR}"
sudo service $DNSPROG start
echo -e "${RED}[+] Flushing existing iptables rules...${NOCOLOR}"
$IPTABLES -F
$IPTABLES -F -t nat
$IPTABLES -X
$IPTABLES -P INPUT ACCEPT
$IPTABLES -P OUTPUT ACCEPT
$IPTABLES -P FORWARD ACCEPT
$MODPROBE ip_conntrack
$MODPROBE iptable_nat
$MODPROBE ip_conntrack_ftp
$MODPROBE ip_nat_ftp

########## NAT rules ##########
#We will forward all the network traffic to the captive portal in order to log in
echo "${WHITE}[!] WARNING: Tor is not running - all data are directly forwarded to the Internet...${NOCOLOR}"
$IPTABLES -t nat -A POSTROUTING -o $O_DEVICE  -j MASQUERADE
$IPTABLES -A FORWARD -i $O_DEVICE -o $I_DEVICE -m state --state RELATED,ESTABLISHED -j ACCEPT
$IPTABLES -A FORWARD -i $I_DEVICE -o $O_DEVICE -j ACCEPT

########## DIALOG BOX #########
clear
whiptail --title "TorBox - INFO" --textbox text/browser-text 25 80
echo -e "${RED}[+] Stopping DNS forwarder...${NOCOLOR}"
sudo service $DNSPROG stop

########## FINISHING ##########
exit 0
