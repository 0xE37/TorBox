#!/bin/bash


# This file is part of TorBox, an easy to use anonymizing router based on Raspberry Pi.
# Copyright (C) 2020 Patrick Truffer
# Contact: anonym@torbox.ch
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it is useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
# DESCRIPTION
# This file deactivates already configured bridges in /etc/torrc.
#
# SYNTAX
# ./bridges_deactivate_old <show when zero bridges>
#
# <show when zero bridges> -> defines if a message is shown or not if no bridges are configured in /etc/torrc.
#
# Possible values for <show when zero bridges>:
#
# 0	->	No message is shown.
# 1	->	Message is shown.
#
#
###### SET VARIABLES ######
#
# SIZE OF THE MENU
#
# How many items do you have in the main menu?
NO_ITEMS=3
#
# How many lines are only for decoration and spaces?
NO_SPACER=3
#
#Set the the variables for the menu
MENU_WIDTH=80
MENU_WIDTH_REDUX=60
MENU_HEIGHT_25=25
MENU_HEIGHT_15=15
MENU_HEIGHT=$((8+NO_ITEMS+NO_SPACER))
MENU_LIST_HEIGHT=$((NO_ITEMS+$NO_SPACER))

#Colors
RED='\033[1;31m'
GREEN='\033[1;32m'
WHITE='\033[1;37m'
NOCOLOR='\033[0m'

#Other variables
TORRC="/etc/tor/torrc"
show_when_zero_bridges=$1
i=0

##############################
######## FUNCTIONS ########

# NONE YET



######## PREPARATIONS ########
#
# HOW MANY CONFIGURED BRIDGES DO WE HAVE?
# readarray reads into an array beginning with index 0
readarray -t configured_bridges_deactivated < <(grep "^#Bridge " ${TORRC})
readarray -t configured_bridges_activated < <(grep "^Bridge " ${TORRC})
if [ ${#configured_bridges_deactivated[0]} = 0 ]; then
  number_configured_bridges_deactivated=0
else
  number_configured_bridges_deactivated=${#configured_bridges_deactivated[*]}
fi
if [ ${#configured_bridges_activated[0]} = 0 ]; then
  number_configured_bridges_activated=0
else
  number_configured_bridges_activated=${#configured_bridges_activated[*]}
fi
number_configured_bridges_total=$(( $number_configured_bridges_deactivated + $number_configured_bridges_activated ))

###########################

if [ $number_configured_bridges_activated = 0 ]; then
  if [ $show_when_zero_bridges = 1 ]; then
    clear
    if (whiptail --title "TorBox - INFO" --msgbox "\n\nThere are NO activated bridges, yet!" $MENU_HEIGHT_15 $MENU_WIDTH); then
        clear
    fi
  fi
else
  clear
  CHOICE=$(whiptail --cancel-button "Back" --title "TorBox v.0.3.0 - BRIDGE DEACTIVATION MENU" --menu "Choose an option (ESC -> back to the main menu)" $MENU_HEIGHT $MENU_WIDTH $MENU_LIST_HEIGHT \
  " " " " \
  "===" "==============================================================" \
  "  1" "Deactivate ALL configured bridges"  \
  "  2" "Deactivate only bridges, which are not longer ONLINE"  \
  "  3" "Deactivate only slected bridges"  \
  "===" "==============================================================" 3>&1 1>&2 2>&3)
  exitstatus=$?

  if [ $exitstatus = 0 ]; then
    if [ "$CHOICE" != " " ]; then

    # Deactivate ALL configured bridges
		  if [ $CHOICE = 1 ]; then
        sudo sed -i "s/^Bridge /#Bridge /g" ${TORRC}
        INPUT=$(cat text/restart-tor-text)
        if (whiptail --title "TorBox - INFO" --defaultno --no-button "NO - DON'T (RE)START" --yes-button "YES - (RE)START" --yesno "$INPUT" $MENU_HEIGHT_15 $MENU_WIDTH); then
          clear
          restarting_tor menu-bridges
        fi

    # Deactivate only bridges, which are OFFLINE or do not exist anymore
      elif [ $CHOICE = 2 ]; then
        clear
        echo -e "${RED}[+] Checking connectivity to the bridge databas - please wait...${NOCOLOR}"
        OCHECK=$(curl -m 6 -s https://onionoo.torproject.org)
        if [ $? == 0 ]; then OCHECK="0"; else OCHECK="1"; fi
        if [ $OCHECK == 0 ]; then
          echo -e "${WHITE}[+] OK - we are connected with the bridge databas${NOCOLOR}"
          echo " "
          echo -e "${RED}[+] Checking for bridges to deactivate - please wait...${NOCOLOR}"
          trap "bash bridges_deactivate_old; exit 0" SIGINT
          while [ $i -lt $number_configured_bridges_activated ]
          do
            bridge_address=$(cut -d ' ' -f2- <<< ${configured_bridges_activated[$i]})
            bridge_hash=$(cut -d ' ' -f3 <<< $bridge_address)
            bridge_status=$(./bridges_check.py -f $bridge_hash)
            j=0
            if [ $bridge_status == 0 ] || [ $bridge_status == 2 ]; then
              j=$(($j + 1))
              echo -e "${RED}[+] Deactivating bridge with the hash $bridge_hash${NOCOLOR}"
              #This is necessary to work with special characters in sed
              ORIGINAL_STR="Bridge $bridge_address"
              ORIGINAL_STR="$(<<< "$ORIGINAL_STR" sed -e 's`[][\\/.*^$]`\\&`g')"
              ORIGINAL_STR="^$ORIGINAL_STR"
              REPLACEMENT_STR="#Bridge $bridge_address"
              REPLACEMENT_STR="$(<<< "$REPLACEMENT_STR" sed -e 's`[][\\/.*^$]`\\&`g')"
              sudo sed -i "s/${ORIGINAL_STR}/${REPLACEMENT_STR}/g" ${TORRC}
            fi
            i=$(( $i + 1 ))
          done
          sleep 3
          clear
          if [ $j -gt 0 ]; then
            INPUT=$(cat text/restart-tor-text)
            if (whiptail --title "TorBox - INFO" --defaultno --no-button "NO - DON'T (RE)START" --yes-button "YES - (RE)START" --yesno "$INPUT" $MENU_HEIGHT_15 $MENU_WIDTH); then
              restarting_tor menu-bridges
            fi
          fi
        else
          echo -e "${WHITE}[+] OH NO! - no connection to the bridge databas :( ${NOCOLOR}"
          echo -e "${WHITE}[+] Cant fetch the status of the bridges - ABORTING :( ${NOCOLOR}"
          sleep 2
        fi

    # Deactivate only selected bridges
      elif [ $CHOICE = 3 ]; then
        INPUT=$(cat text/deactivate-selected-bridges-text)
        if (whiptail --title "TorBox - INFO" --yesno "$INPUT" $MENU_HEIGHT_25 $MENU_WIDTH); then
          number_to_be_deactivated=$(whiptail --title "TorBox - INFO" --inputbox "\n\nWhich bridge number(s) do you like to deactivate? Put in all bridge numbers separated by a comma (for example 1,2,3,10)" $MENU_HEIGHT_25 $MENU_WIDTH_REDUX 3>&1 1>&2 2>&3)
          number_to_be_deactivated=$(cut -f1- -d ',' --output-delimiter=' ' <<< $number_to_be_deactivated)
          deactivate_number=$(cut -d ' ' -f1 <<< $number_to_be_deactivated)
          number_configured_bridges_activated=$(( $number_configured_bridges_deactivated + $number_configured_bridges_activated ))
          clear
          echo -e "${RED}[+] Checking for bridges to deactivate - please wait...${NOCOLOR}"
          j=0
          while [[ "$deactivate_number" != " " && $deactivate_number -gt 0 && $deactivate_number -gt $number_configured_bridges_deactivated && $deactivate_number -le $number_configured_bridges_activated ]]
          do
            i=$(( $deactivate_number - $number_configured_bridges_deactivated - 1 ))
            bridge_address=$(cut -d ' ' -f2- <<< ${configured_bridges_activated[$i]})
            bridge_hash=$(cut -d ' ' -f3 <<< $bridge_address)
            j=$(($j + 1))
            echo -e "${RED}[+] Dectivating bridge number $deactivate_number${NOCOLOR}"
            #This is necessary to work with special characters in sed
            ORIGINAL_STR="Bridge $bridge_address"
            ORIGINAL_STR="$(<<< "$ORIGINAL_STR" sed -e 's`[][\\/.*^$]`\\&`g')"
            ORIGINAL_STR="^$ORIGINAL_STR"
            REPLACEMENT_STR="#Bridge $bridge_address"
            REPLACEMENT_STR="$(<<< "$REPLACEMENT_STR" sed -e 's`[][\\/.*^$]`\\&`g')"
            sudo sed -i "s/${ORIGINAL_STR}/${REPLACEMENT_STR}/g" ${TORRC}
            if [ "$deactivate_number" = "$number_to_be_deactivated" ]; then
              deactivate_number=0
            else
              number_to_be_deactivated=$(cut -d ' ' -f2- <<< $number_to_be_deactivated)
              deactivate_number=$(cut -d ' ' -f1 <<< $number_to_be_deactivated)
            fi
          done
          sleep 3
          clear
          if [ $j -gt 0 ]; then
            INPUT=$(cat text/restart-tor-text)
            if (whiptail --title "TorBox - INFO" --defaultno --no-button "NO - DON'T (RE)START" --yes-button "YES - (RE)START" --yesno "$INPUT" $MENU_HEIGHT_15 $MENU_WIDTH); then
              restarting_tor menu-bridges
            fi
          fi
        fi
      fi
    fi
  fi
fi
