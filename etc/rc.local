#!/bin/sh -e
#
# rc.local
#
# Added by TorBox
rfkill unblock all

# Print the IP address
_IP=$(hostname -I) || true
if [ "$_IP" ]; then
  printf "My IP address is %s\n" "$_IP"
fi

# NEW v.0.5.1: starting webssh
if grep "TWEBSSH=1" /home/torbox/torbox/run/torbox.run ; then
	[ ! -f /etc/nginx/sites-available/webssh.conf ] && sudo cp etc/nginx/sites-available/sample-webssh.conf /etc/nginx/sites-available/webssh.conf
	[ ! -L /etc/nginx/sites-enabled/webssh.conf ] && sudo ln -sf /etc/nginx/sites-available/webssh.conf /etc/nginx/sites-enabled/
	nohup sudo /home/torbox/torbox/lib/webssh/twebssh --unix-socket=/var/run/webssh.sock &
	sleep 2
	sudo ls /var/run | grep .*-onion-.*.sock | xargs -I {} -d"\n" sudo rm /var/run/{}
	sleep 5
	sudo systemctl restart nginx
	rm nohup.out
fi

# Change the MAC address if needed
for INTERFACE in eth0 eth1 wlan0 wlan1 ; do
	if grep "^MAC_$INTERFACE=permanent" /home/torbox/torbox/run/torbox.run || grep "^MAC_$INTERFACE=random" /home/torbox/torbox/run/torbox.run ; then
		if ip link show $INTERFACE | grep "state UP" ; then
			sudo ip link set dev $O_DEVICE down
			if grep "^MAC_$INTERFACE=permanent" /home/torbox/torbox/run/torbox.run; then sudo macchanger -p $O_DEVICE; fi
			if grep "^MAC_$INTERFACE=random" /home/torbox/torbox/run/torbox.run; then sudo macchanger -r $O_DEVICE; fi
			sudo ip link set dev $O_DEVICE up
		elif ip link show $INTERFACE | grep "state DOWN" ; then
			if grep "^MAC_$INTERFACE=permanent" /home/torbox/torbox/run/torbox.run; then sudo macchanger -p $O_DEVICE; fi
			if grep "^MAC_$INTERFACE=random" /home/torbox/torbox/run/torbox.run; then sudo macchanger -r $O_DEVICE; fi
		fi
	else
		MAC_ADDRESS=$(grep "MAC_$INTERFACE=" /home/torbox/torbox/run/torbox.run | sed "s/.*=//g")
		if ip link show $INTERFACE | grep "state UP" ; then
			sudo ip link set dev $INTERFACE down
			sudo ip link set dev $INTERFACE address $MAC_ADDRESS
			sudo ip link set dev $INTERFACE up
		elif ip link show $INTERFACE | grep "state DOWN" ; then
			sudo ip link set dev $INTERFACE address $MAC_ADDRESS
		fi
	fi
	sudo systemctl restart hostapd
	sudo systemctl restart isc-dhcp-server
	sleep 3
done

# To set TorBox's AP is dangerous and may look someone out. We change that back to wlan0
if grep "iface wlan1 inet static" /etc/network/interfaces || grep "^interface=wlan1" /etc/hostapd/hostapd.conf ; then
  sudo ifdown wlan0
  sudo ifdown wlan1
  sudo sed -i "s/^auto wlan0/auto wlan1/" /etc/network/interfaces
  sudo sed -i "s/^iface wlan0 inet dhcp/iface wlan1 inet dhcp/" /etc/network/interfaces
  sudo sed -i "s/^iface wlan1 inet static/iface wlan0 inet static/" /etc/network/interfaces
  sudo sed -i "s/^interface=wlan1/interface=wlan0/" /etc/hostapd/hostapd.conf
  sudo sed -i "s/^INTERNET_IFACE=.*/INTERNET_IFACE=wlan1/" /home/torbox/torbox/run/torbox.run
  sudo sed -i "s/^CLIENT_IFACE=.*/CLIENT_IFACE=wlan0 eth0/" /home/torbox/torbox/run/torbox.run
  sudo ifup wlan0 &>/dev/null &
  sudo ifup wlan1 &>/dev/null &
  sudo systemctl restart hostapd
  sudo systemctl restart isc-dhcp-server
  sleep 3
fi

# If a wireless USB dongle is available, let's check if we can auto-connect to a wireless network
if ip link | grep wlan1 | grep "state DOWN" ; then
  sudo /usr/bin/python3 /home/torbox/torbox/torbox_wireless_manager.py -i wlan1 -a
  sudo sed -i "s/^INTERNET_IFACE=.*/INTERNET_IFACE=wlan1/" /home/torbox/torbox/run/torbox.run
  sleep 3
fi

# If configured, turn TACA on
if grep "LOGCHECK=1" /home/torbox/torbox/run/torbox.run ; then
  sudo /usr/bin/python3 /home/torbox/torbox/log_check.py &
  sleep 3
fi

sudo /home/torbox/torbox/run/start_tfs initial
sudo /sbin/iptables-restore < /etc/iptables.ipv4.nat
sudo systemctl start dnsmasq
if sudo timeout 5 sudo route | grep -m 1 default ; then
	sudo /usr/sbin/ntpdate pool.ntp.org
fi
sudo systemctl stop dnsmasq

exit 0
